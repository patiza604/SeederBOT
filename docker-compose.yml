version: '3.8'

services:
  # SeederBot - Main application
  seederbot:
    build: .
    container_name: seederbot
    ports:
      - "8000:8000"
    environment:
      # App Configuration
      - APP_TOKEN=${APP_TOKEN:-your-secure-random-token-here}
      - MODE=${MODE:-radarr}
      - HOST=0.0.0.0
      - PORT=8000

      # Radarr Configuration (primary path)
      - RADARR_URL=http://radarr:7878
      - RADARR_API_KEY=${RADARR_API_KEY}
      - ROOT_FOLDER=/movies
      - QUALITY_PROFILE_ID=${QUALITY_PROFILE_ID:-4}

      # Jackett Configuration (for both paths)
      - JACKETT_URL=http://jackett:9117
      - JACKETT_API_KEY=${JACKETT_API_KEY}

      # Blackhole Configuration
      - CATEGORIES=${CATEGORIES:-2000,2010}
      - MIN_SEEDERS=${MIN_SEEDERS:-20}
      - QUALITY_REGEX=${QUALITY_REGEX:-1080p.*WEB-DL|1080p.*BluRay}
      - EXCLUDE_REGEX=${EXCLUDE_REGEX:-CAM|TS|TC|WORKPRINT}
      - MIN_SIZE_GB=${MIN_SIZE_GB:-2.5}
      - MAX_SIZE_GB=${MAX_SIZE_GB:-6.0}
      - AUTOADD_WATCH_DIR=/data/torrents/watch

    volumes:
      - ./data/torrents:/data/torrents
      - ./logs:/app/logs

    networks:
      - media-stack

    depends_on:
      - radarr
      - jackett

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Radarr - Movie management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./config/radarr:/config
      - ./data/movies:/movies
      - ./data/downloads:/downloads
    ports:
      - "7878:7878"
    networks:
      - media-stack
    restart: unless-stopped

  # Jackett - Indexer proxy
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - AUTO_UPDATE=true
    volumes:
      - ./config/jackett:/config
      - ./data/torrents:/downloads
    ports:
      - "9117:9117"
    networks:
      - media-stack
    restart: unless-stopped

  # Deluge - Torrent client (optional)
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - DELUGE_LOGLEVEL=error
    volumes:
      - ./config/deluge:/config
      - ./data/downloads:/downloads
      - ./data/torrents:/data/torrents
    ports:
      - "8112:8112"    # Web UI
      - "6881:6881"    # Incoming connections
      - "6881:6881/udp" # DHT
    networks:
      - media-stack
    restart: unless-stopped

  # Sonarr - TV show management (optional)
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - ./config/sonarr:/config
      - ./data/tv:/tv
      - ./data/downloads:/downloads
    ports:
      - "8989:8989"
    networks:
      - media-stack
    restart: unless-stopped
    profiles:
      - full-stack

  # Nginx - Reverse proxy with SSL (optional)
  nginx:
    image: nginx:alpine
    container_name: seederbot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ops/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ops/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - media-stack
    depends_on:
      - seederbot
    restart: unless-stopped
    profiles:
      - proxy

networks:
  media-stack:
    driver: bridge

volumes:
  radarr_config:
  jackett_config:
  deluge_config:
  sonarr_config: